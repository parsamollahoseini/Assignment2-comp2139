@model SmartInventory.Models.Product
@{
ViewData["Title"] = "Create Product";
}

<h2>Create Product</h2>

@* Container for AJAX messages *@
<div id="messageContainer" style="margin-bottom: 15px;"></div>

@* Add a loader element (hidden by default) *@
<div id="formLoader" style="display: none; text-align: center; padding: 10px;">
    <div class="spinner-border spinner-border-sm text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

<form id="createProductForm" asp-action="Create" method="post">
    @* Anti-forgery token is automatically included by the form tag helper *@
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div> @* Display model-level errors *@

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CategoryId" class="control-label">Category</label>
        <select asp-for="CategoryId" asp-items="ViewBag.Categories" class="form-control"></select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price" class="control-label"></label>
        <input asp-for="Price" type="number" step="0.01" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="QuantityInStock" class="control-label"></label>
        <input asp-for="QuantityInStock" type="number" class="form-control" />
        <span asp-validation-for="QuantityInStock" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="LowStockThreshold" class="control-label"></label>
        <input asp-for="LowStockThreshold" type="number" class="form-control" />
        <span asp-validation-for="LowStockThreshold" class="text-danger"></span>
    </div>
    <div class="form-group mt-3">
        <button id="createSubmitButton" type="submit" class="btn btn-primary">Create</button>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            $('#createProductForm').on('submit', function (e) {
                e.preventDefault(); // Prevent default submission

                var form = $(this);
                var url = form.attr('action');
                var formData = form.serialize();
                var $messageContainer = $('#messageContainer');
                var $loader = $('#formLoader');
                var $submitButton = $('#createSubmitButton');

                // Basic client-side check if form is valid (relies on unobtrusive validation)
                if (!form.valid()) {
                    // Highlight errors if needed, but unobtrusive validation should handle it
                    $messageContainer.html('<div class="alert alert-warning">Please correct the errors below.</div>').show();
                    return;
                }

                // Clear previous messages and show loader
                $messageContainer.hide().html('');
                $loader.show();
                $submitButton.prop('disabled', true); // Disable button during request

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    headers: {
                        "X-Requested-With": "XMLHttpRequest", // Identify as AJAX
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() // Include anti-forgery token
                    },
                    success: function (response) {
                        if (response.success) {
                            // Success: show message
                            $messageContainer.html('<div class="alert alert-success">' + response.message + '</div>').show();

                            // Redirect to inventory page after a brief delay (to show the success message)
                            setTimeout(function() {
                                window.location.href = '@Url.Action("Index")';
                            }, 1500);
                        } else {
                            // Failure (validation errors from server or general error)
                            var errorHtml = '<div class="alert alert-danger"><ul>';
                            if (response.errors) {
                                $.each(response.errors, function (key, value) {
                                    // Display field-specific errors near the fields (optional enhancement)
                                    // For now, list all errors in the message container
                                    $.each(value, function(i, errorMsg) {
                                        errorHtml += '<li>' + errorMsg + '</li>';
                                    });
                                });
                            } else {
                                errorHtml += '<li>An unknown error occurred.</li>';
                            }
                            errorHtml += '</ul></div>';
                            $messageContainer.html(errorHtml).show();
                        }
},
                    error: function (xhr, status, error) {
                        console.error("AJAX POST Error:", status, error, xhr.responseText);
                        $messageContainer.html('<div class="alert alert-danger">An error occurred while submitting the form. Please try again.</div>').show();
                    },
                    complete: function () {
                        // Hide loader and re-enable button
                        $loader.hide();
                        $submitButton.prop('disabled', false);
                    }
                });
            });
        });
    </script>
}
